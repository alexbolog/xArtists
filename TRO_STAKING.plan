Project: TRO Governance Staking
----------------------------------------

DONE Project Setup
  - Initialize project structure
  - Setup dependencies
  - Add basic contract structure

TODO Core Staking Implementation
  - DONE Add storage for TRO and LP token stakes
  - DONE Implement stake functions
  - DONE Implement unstake functions
  - DONE Add unstake lock during active proposals
  - Add events for all actions
    - DONE Stake/Unstake
    - DONE Vote
    - DONE Create Proposal

TODO External Pair Integration
  - Add MapMapper storage for TokenIdentifier -> PoolConfiguration
  - Add supported pair types storage
  - Implement pair token fetching
  - Add LP token validation
  - Calculate TRO equivalent from LP tokens

TODO Voting System
  - DONE Add proposal storage and creation
  - DONE Only owner can create proposals
  - Implement voting power calculation:
    - DONE Direct TRO power
    - LP-based TRO power
  - DONE Add voting mechanism
  - DONE Add proposal lifecycle management
  - WAIT Should users be allowed to only vote once or for full voting power? What if they stake more tokens in the pool? Should they be allowed to?

TODO Analytics & Views
  - Add user stake information views
  - Add proposal status views
  - Add voting power views
  - Add general statistics endpoints

TODO Testing Framework
  - Unit tests for core functions
  - Integration tests:
    - DONE Complete staking scenarios:
        - DONE Stake scenarios
        - DONE Unstake scenarios
    - Voting scenarios
        - DONE Valid proposal creation
        - DONE Valid voting action
        - Valid proposal status
        - Valid power calculation:
          - $TRO power
          - LP tokens $TRO power
    - Multiple LP pair scenarios

WAIT Reward System
  - TRO rewards distribution
  - Reward calculation
  - Claiming mechanism

NOTE Development Guidelines
  - Document all public endpoints
  - Add comprehensive error messages
  - Emit events for tracking